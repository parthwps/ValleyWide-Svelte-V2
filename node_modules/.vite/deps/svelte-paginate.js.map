{
  "version": 3,
  "sources": ["../../svelte-paginate/paginate.js", "../../svelte-paginate/types.js", "../../svelte-paginate/generateNavigationOptions.js", "../../svelte-paginate/PaginationNav.svelte", "../../svelte-paginate/LightPaginationNav.svelte", "../../svelte-paginate/DarkPaginationNav.svelte"],
  "sourcesContent": ["export function paginate({ items, pageSize, currentPage }) {\n    return items.slice((currentPage - 1) * pageSize, (currentPage - 1) * pageSize + pageSize);\n}\n", "export var SymbolType;\n(function (SymbolType) {\n    SymbolType[\"PREVIOUS_PAGE\"] = \"PREVIOUS_PAGE\";\n    SymbolType[\"NEXT_PAGE\"] = \"NEXT_PAGE\";\n    SymbolType[\"ELLIPSIS\"] = \"ELLIPSIS\";\n})(SymbolType || (SymbolType = {}));\n", "import { SymbolType } from './types';\nexport function generateNavigationOptions({ totalItems, pageSize, currentPage, limit, showStepOptions = false }) {\n    const totalPages = Math.ceil(totalItems / pageSize);\n    const limited = limit && totalPages > getLimitThreshold(limit);\n    const options = limited\n        ? generateLimitedOptions({ totalPages, limit, currentPage })\n        : generateUnlimitedOptions({ totalPages });\n    return showStepOptions ? addStepOptions({ options, currentPage, totalPages }) : options;\n}\nfunction generateUnlimitedOptions({ totalPages }) {\n    return new Array(totalPages).fill(null).map((_, index) => ({\n        type: 'number',\n        value: index + 1\n    }));\n}\nfunction generateLimitedOptions({ totalPages, limit, currentPage }) {\n    const boundarySize = limit * 2 + 2;\n    const firstBoundary = 1 + boundarySize;\n    const lastBoundary = totalPages - boundarySize;\n    const totalShownPages = firstBoundary + 2;\n    if (currentPage <= firstBoundary - limit) {\n        return Array(totalShownPages)\n            .fill(null)\n            .map((_, index) => {\n            if (index === totalShownPages - 1) {\n                return {\n                    type: 'number',\n                    value: totalPages\n                };\n            }\n            else if (index === totalShownPages - 2) {\n                return {\n                    type: 'symbol',\n                    symbol: SymbolType.ELLIPSIS,\n                    value: firstBoundary + 1\n                };\n            }\n            return {\n                type: 'number',\n                value: index + 1\n            };\n        });\n    }\n    else if (currentPage >= lastBoundary + limit) {\n        return Array(totalShownPages)\n            .fill(null)\n            .map((_, index) => {\n            if (index === 0) {\n                return {\n                    type: 'number',\n                    value: 1\n                };\n            }\n            else if (index === 1) {\n                return {\n                    type: 'symbol',\n                    symbol: SymbolType.ELLIPSIS,\n                    value: lastBoundary - 1\n                };\n            }\n            return {\n                type: 'number',\n                value: lastBoundary + index - 2\n            };\n        });\n    }\n    else if (currentPage >= firstBoundary - limit && currentPage <= lastBoundary + limit) {\n        return Array(totalShownPages)\n            .fill(null)\n            .map((_, index) => {\n            if (index === 0) {\n                return {\n                    type: 'number',\n                    value: 1\n                };\n            }\n            else if (index === 1) {\n                return {\n                    type: 'symbol',\n                    symbol: SymbolType.ELLIPSIS,\n                    value: currentPage - limit + (index - 2)\n                };\n            }\n            else if (index === totalShownPages - 1) {\n                return {\n                    type: 'number',\n                    value: totalPages\n                };\n            }\n            else if (index === totalShownPages - 2) {\n                return {\n                    type: 'symbol',\n                    symbol: SymbolType.ELLIPSIS,\n                    value: currentPage + limit + 1\n                };\n            }\n            return {\n                type: 'number',\n                value: currentPage - limit + (index - 2)\n            };\n        });\n    }\n    return [];\n}\nfunction addStepOptions({ options, currentPage, totalPages }) {\n    return [\n        {\n            type: 'symbol',\n            symbol: SymbolType.PREVIOUS_PAGE,\n            value: currentPage <= 1 ? 1 : currentPage - 1\n        },\n        ...(options || []),\n        {\n            type: 'symbol',\n            symbol: SymbolType.NEXT_PAGE,\n            value: currentPage >= totalPages ? totalPages : currentPage + 1\n        }\n    ];\n}\nfunction getLimitThreshold(limit) {\n    const maximumUnlimitedPages = 3; // This means we cannot limit 3 pages or less\n    const numberOfBoundaryPages = 2; // The first and last pages are always shown\n    return limit * 2 + maximumUnlimitedPages + numberOfBoundaryPages;\n}\n", null, null, null],
  "mappings": "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",
  "names": ["SymbolType", "ctx", "ctx", "ctx"]
}
